{
  "name": "akamai",
  "version": "0.1.0",
  "description": "Communication with Akamai's CCUAPI",
  "keywords": [
    "api",
    "akamai",
    "cdn"
  ],
  "author": {
    "name": "Julian Lannigan",
    "email": "julian@jlconsulting.co",
    "url": "http://julianlannigan.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mrlannigan/node-akamai.git"
  },
  "bugs": {
    "url": "http://github.com/mrlannigan/node-akamai/issues"
  },
  "license": "MIT",
  "main": "akamai.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "directories": {
    "examples": "examples"
  },
  "dependencies": {
    "request": "2.11.4",
    "underscore": "1.4.2",
    "xml2js": "0.2.0",
    "async": "0.1.22"
  },
  "engines": {
    "node": ">= 0.6.0"
  },
  "readme": "# Akamai API for Node.js\n\nnode-akamai allows for easy communication with Akamai's SOAP CCUAPI to purge/invalidate cached objects.\n\n***Note: The API for this module is going to be changing in the near future to better wrap the different functions the purge API provides.***\n\n## Installation\n\n    npm install akamai\n\n## Example Usage\n\n```javascript\nvar akamai = require('akamai');\n\nvar myPurge = new akamai.purge([\n  'http://example.com/somewhere',\n  'http://example.com/cool',\n  'http://example.com/but',\n  'http://example.com/nowhere',\n  'http://example.com/real'\n], {\n  user: 'john@example.com',\n  password: '...',\n  domain: 'production',\n  notify: ['john@example.com', 'developers@example.com']\n}, function(err, responses) {\n  if (err) {\n    console.log(err);\n    return;\n  }\n\n  console.log(require('util').inspect(responses, true, 3, true));\n});\n```\n\n##.purge(urls, options, [callback])\n\nCreate a purge request. Note that any request made must declared with the `new` keyword.  The resulting object is an extension of the `EventEmitter` so you are able to attach to the various events that are listed below.\n\n### urls\n\nArray of strings representing the full urls of the content you wish to be purged.  Depending on the options.type value, this array can represent cpcode names to be purged/invalidated.\n\n### options\n\n* `type` Of urls. They can be urls or cpcodes.\n  * `arl` [Default]\n  * `cpcode`\n* `domain` The network to target your request.\n  * `production` [Default]\n  * `staging`\n* `action`\n  * `remove` [Default]\n  * `invalidate`\n* `user` [Required] Username to authenicate with the API.\n* `password` [Required] Password for the user.\n* `notify` [Required] String or Array of Strings representing email address(es).\n\n### callback(err, responses)\n\nProvides 2 arguments, the error object and the responses array.  The error object is null if no error occurred.  The responses array contains instances of the `AkamaiPurgeResponse` class.  This class parses and describes the response from the API.\n\n### events\n\n#### `error`\n```js\nmyPurge.on('error', function(err, response, request, urlSet) {\n  console.log(err);\n});\n```\n\n#### `success`\n```js\nmyPurge.on('success', function(responses) {\n  console.log(responses);\n});\n```\n\n#### `request-success`\n```js\nmyPurge.on('request-success', function(response) {\n  console.log(response);\n});\n```\n\n## Bugs or Feature Requests?\n\nPlease use GitHub's issue tracker.\n\n## License\n\nNode-Akamai is available under the MIT license\n\n```\nCopyright (c) 2012 Julian Lannigan\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n```",
  "readmeFilename": "README.md",
  "_id": "akamai@0.1.0",
  "dist": {
    "shasum": "3f611267e8eab62d4b43f11833768a4c0c54b572"
  },
  "_from": "akamai@0.1.0"
}
